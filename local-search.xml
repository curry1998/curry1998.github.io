<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>vue中mounted方法与js定时器使用</title>
    <link href="/2023/03/02/vue%E4%B8%ADmounted%E6%96%B9%E6%B3%95%E4%B8%8Ejs%E5%AE%9A%E6%97%B6%E5%99%A8%E4%BD%BF%E7%94%A8/"/>
    <url>/2023/03/02/vue%E4%B8%ADmounted%E6%96%B9%E6%B3%95%E4%B8%8Ejs%E5%AE%9A%E6%97%B6%E5%99%A8%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p>在常见的博客中都会这样写到</p><blockquote><p>created:在模板渲染成html前调用，即通常初始化某些属性值，然后再渲染成视图。<br>mounted:在模板渲染成html后调用，通常是初始化页面完成后，再对html的dom节点进行一些需要的操作。</p></blockquote><hr><p>在实际的开发过程中我们会经常使用create方法，在页面还未渲染成html前，调用函数，从后端获取数据，在实现对页面的数据进行显示。比如说下面例子</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">created</span>(<span class="hljs-params"></span>) &#123;<br><br>      <span class="hljs-keyword">if</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">$route</span>.<span class="hljs-property">params</span>.<span class="hljs-property">id</span>)<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-property">orderNo</span>=<span class="hljs-variable language_">this</span>.<span class="hljs-property">$route</span>.<span class="hljs-property">params</span>.<span class="hljs-property">id</span><br>      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getOrderInfo</span>()<br>    &#125;,<br>    <span class="hljs-attr">methods</span>:&#123;<br>      <span class="hljs-title function_">getOrderInfo</span>(<span class="hljs-params"></span>)&#123;<br>        order.<span class="hljs-title function_">getOrderByNum</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">orderNo</span>).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">resp</span>=&gt;</span>&#123;<br>          <span class="hljs-variable language_">this</span>.<span class="hljs-property">order</span>=resp.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>.<span class="hljs-property">data</span><br>          <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>((<span class="hljs-variable language_">this</span>.<span class="hljs-property">order</span>))<br>          <span class="hljs-comment">//根据订单中的老师id，获取老师姓名</span><br>          <span class="hljs-title function_">getDetailTeacher</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">order</span>.<span class="hljs-property">teacherName</span>).<span class="hljs-title function_">then</span>(<br>            <span class="hljs-function"><span class="hljs-params">resp</span>=&gt;</span>&#123;<br>              <span class="hljs-variable language_">this</span>.<span class="hljs-property">teacherName</span>=resp.<span class="hljs-property">data</span>.<span class="hljs-property">data</span>.<span class="hljs-property">teacher</span>.<span class="hljs-property">name</span><br>              <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">teacherName</span>)<br>            &#125;<br>          )<br><br>        &#125;).<span class="hljs-title function_">catch</span>(<span class="hljs-function"><span class="hljs-params">error</span>=&gt;</span>&#123;<br><br>        &#125;)<br>      &#125;,<br></code></pre></td></tr></table></figure><p>哪我们在什么时候使用mounted方法？<br><strong>mounted通常是在一些插件的使用或者组件的使用中进行操作 也就是页面渲染之后执行</strong> 通常情况下我们会在没有相应的点击事件，但需要在页面展示过程中去不断调用某一函数情况下使用。<br>比如说在常见的订单支付功能，我们点击立即付款后，跳转到付款页面。这是时候需要我们不断访问后端接口查看用户是否支付成功，支付成功后进行跳转。我们需要将查询函数的调用写在mounted函数中，并通过计时器不断调用。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs js"><br> <span class="hljs-title function_">mounted</span>(<span class="hljs-params"></span>) &#123; <span class="hljs-comment">//页面渲染之后执行,设置为3s一更新</span><br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">timer1</span> = <span class="hljs-built_in">setInterval</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>      <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">queryOrderStatus</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">payObj</span>.<span class="hljs-property">out_trade_no</span>)<br>    &#125;, <span class="hljs-number">3000</span>);<br>  &#125;,<br><span class="hljs-attr">methods</span>: &#123;<br> <br>    <span class="hljs-comment">//支付跳转</span><br>    <span class="hljs-title function_">queryOrderStatus</span>(<span class="hljs-params">orderNo</span>) &#123;<br>      orderApi.<span class="hljs-title function_">queryPayStatus</span>(orderNo)<br>        .<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">response</span> =&gt;</span> &#123;<br>          <span class="hljs-keyword">if</span> (response.<span class="hljs-property">data</span>.<span class="hljs-property">success</span>) &#123;<br>            <span class="hljs-comment">//支付成功，清除定时器</span><br>            <span class="hljs-built_in">clearInterval</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">timer1</span>)<br>            <span class="hljs-comment">//提示</span><br>            <span class="hljs-variable language_">this</span>.$message(&#123;<br>              <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;success&#x27;</span>,<br>              <span class="hljs-attr">message</span>: <span class="hljs-string">&#x27;支付成功! 💴&#x27;</span><br>            &#125;)<br>            <span class="hljs-comment">//跳转回到课程详情页面</span><br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">$router</span>.<span class="hljs-title function_">push</span>(&#123;<br>              <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/course/&#x27;</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">payObj</span>.<span class="hljs-property">course_id</span><br>            &#125;)<br>          &#125;<br>        &#125;)<br>    &#125;<br>  &#125;<br></code></pre></td></tr></table></figure><p>定时器方法介绍</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable language_">this</span>.<span class="hljs-property">time1</span>=<span class="hljs-built_in">setInterval</span>(<span class="hljs-function">()=&gt;</span>&#123;<br>        <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">queryPayStatus</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">this</span>.<span class="hljs-property">payObj</span>.<span class="hljs-property">out_trade_no</span>)<br>   &#125;,<span class="hljs-number">3000</span>)<br></code></pre></td></tr></table></figure><p>​    setInterval()有两个参数一个是要执行的函数，一个是要执行的时间间隔单位为毫秒，此处函数采用箭头函数<br>​    ES5 语法如下<br>​    setInterval(function(){ alert(“Hello”); }, 3000);<br>​    将定时器赋给time 对象<br>​    清除定时器 clearInterval(this.time1)</p>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>经济指标</title>
    <link href="/2023/03/02/%E7%BB%8F%E6%B5%8E%E6%8C%87%E6%A0%87/"/>
    <url>/2023/03/02/%E7%BB%8F%E6%B5%8E%E6%8C%87%E6%A0%87/</url>
    
    <content type="html"><![CDATA[<h4 id="1-要不要买黄金"><a href="#1-要不要买黄金" class="headerlink" title="1. 要不要买黄金"></a>1. 要不要买黄金</h4><ol><li>黄金是由名义利率和通胀水平同时构成的一个实际利率，实际上，实际利率 &#x3D; 名义利率 - 通胀水平，名义利率越低，黄金的价格会越高。</li><li>黄金的价格越高，隐含着实际利率越低；这也正是过去20年世界经济的状态，各个经济体的实际利率越来越低，甚至是负的，所以黄金价格越来越高。但是各个央行也会加息来提高其的实际利率，虽然是少数情况。</li><li>低利率带来的风险是，当通缩时，难以通过再通过货币政策去提振或者帮忙经济恢复到正常状态；因此在疫情期间，大多数国家借以财政政策来达到这个目的，比如直接发钱，但是这是以消耗国家货币信心为基础的（容易造成财政赤字，然后财政机制也像货币机制一样逐步失效）</li><li>美国70年代危机，保罗沃尔克就通过大幅度提升名义利率（加息）+经济结构性优化（用更强的实力证明你的信用很坚实、内政上大规模剔除僵尸性企业来完成美国从工业时代到信息时代的转变，苹果，亚马逊都是在80年代经济转型中完成蜕变。 外交上平定中东石油危机，美日贸易战。），来缓解信用危机。 财政赤字是对信用伤害最严重的一环。</li><li>任何的方式方法都没有永久的，而且在低利率情况(其实通货膨胀的本质就是货币量的增加，CPI没怎么涨，但是房价涨的很猛)下，更容易加剧贫富差距。</li></ol><h4 id="2-CPI"><a href="#2-CPI" class="headerlink" title="2. CPI"></a>2. CPI</h4><p>CPI: <strong>居民消费价格指数。</strong></p><ol><li>CPI反应与居民生活有关的产品和劳务价格统计出的物价变动指数。以百分比变化为表达形式。它是衡量<a href="https://zh.m.wikipedia.org/wiki/%E9%80%9A%E8%B4%A7%E8%86%A8%E8%83%80">通货膨胀</a>的主要指标之一。一般定义超过3％为通货膨胀，超过5％就是比较严重的通货膨胀[<a href="https://zh.m.wikipedia.org/wiki/%E6%B6%88%E8%B2%BB%E8%80%85%E7%89%A9%E5%83%B9%E6%8C%87%E6%95%B8#cite_note-xinhua-2">2]</a>。</li></ol><img src="/2023/03/02/%E7%BB%8F%E6%B5%8E%E6%8C%87%E6%A0%87/%E4%B8%AD%E5%9B%BDcpi%E5%8C%85%E5%90%AB.png" class="" title="中国cpi包含"><p>中国CPI 中食品占比很大，失真（不能反映真实情况）严重。</p><ol start="2"><li><p>美国 CPI 篮子包括 8 大类商品和服务：食品与饮料、住宅（租金）、服装、交通运输、医疗保健、娱乐、教 育与通信、其他商品和服务。从 2021 年 3 月份数据来看，住宅权重最大（42%），其次为交通运输 （16%）、食品与饮料（15%）。 </p></li><li><p>中国 CPI 篮子包括 8 大类商品和服务：食品烟酒、衣着、居住（租金）、生活用品及服务、交通和通讯、教 育文化和娱乐、医疗保健、其他用品和服务。从 2021 年数据来看，居住、食品烟酒在 CPI 中权重较 大，分别为 22%、20%</p></li></ol><p><strong>中美CPI 中都不包含房价。</strong></p><p><strong>注意：CPI权重会根据时间，各国会进行调整。</strong></p><h4 id="3-PPI"><a href="#3-PPI" class="headerlink" title="3. PPI"></a>3. PPI</h4><p>PPI: 生产物价指数，指原材料和能源的价格。PPI比预期高，表明有通货膨胀的风险，PPI比预期低说明有通货紧缩的风险。</p><h4 id="4-社融"><a href="#4-社融" class="headerlink" title="4. 社融"></a>4. 社融</h4><ol><li><p>社会融资规模：是指<strong>实体经济从金融体系获得的资金</strong>。需要注意两点：一是，实体经济不仅仅指企业，还包括个人；二是，金融体系不仅仅指银行体系，还包括债券市场、股票市场等，如上市公司IPO融资，也属于社融范围。</p></li><li><p><strong>新增人民币贷款：是社融数据中占比最大的核心项目。</strong>社会融资主要包括表内业务（人民币贷款、外币贷款）、表外业务（信托、票据）、直接融资（债券、股票），其中人民币贷款占比66%，是社融核心项，所以每个月都会重点统计。</p></li></ol><p> 新增人民币贷款： 居民新增贷款(短+ 中长期（中长期主要指的是房贷）)、企事业单位新增贷款(短 + 中长期)</p><p>企业债券： 企业按照法定程序，在一定期限内需要还本付息的债券。</p><p><strong>社融下降意味着经济需求不足， 市场对未来预期不看好。</strong></p><p>中国2022年社融: </p><p>获取地址： </p><ol><li>国家统计局 ： <a href="http://www.stats.gov.cn/tjsj/zxfb/">http://www.stats.gov.cn/tjsj/zxfb/</a>  </li><li>中国人民银行 <a href="http://www.pbc.gov.cn/">http://www.pbc.gov.cn/</a></li><li>财政部： <a href="http://www.mof.gov.cn/gkml/caizhengshuju/">http://www.mof.gov.cn/gkml/caizhengshuju/</a></li></ol><img src="/2023/03/02/%E7%BB%8F%E6%B5%8E%E6%8C%87%E6%A0%87/image-20240302154310316.png" class="" title="社会融资规模增量统计表"><p>如表: 2022年12月社融相比于2021年12月腰斩，主要在于政府债券和企业债券大幅度缩水。政府债券主要是因为有一个前置发行的动作，大部分在上半年就已经发行完毕。2021年发行的也比较多。企业债券主要是理财产品经过大量的赎回，债券市场收益率上行，大量企业取消发行债券。 </p><h4 id="5-M0-M1-M2"><a href="#5-M0-M1-M2" class="headerlink" title="5. M0 M1 M2"></a>5. M0 M1 M2</h4><img src="/2023/03/02/%E7%BB%8F%E6%B5%8E%E6%8C%87%E6%A0%87/image-20240302154518447.png" class=""><p>通常使用 M2&#x2F; GDP 来度量货币的超发情况。M2可以看作基础货币 + 信贷货币。 1块钱基础货币可以派生出7块钱的信贷货币。 我国信贷扩张时货币增发的主要原因。</p><p><strong>注意： 中国M1 不包括个人活期存款。</strong></p><h4 id="6-外汇占款"><a href="#6-外汇占款" class="headerlink" title="6. 外汇占款"></a>6. 外汇占款</h4><p>外汇占款（Funds outstanding for foreign exchange）是指<strong>本国中央银行收购外汇资产而相应投放的本国货币</strong>。 央行用人民币购买外汇，增加货币供给，形成外汇占款。</p><p>外汇占款 是央行进行基础货币投放的重要手段之一。</p><p>外汇供给是企业因为出口而得到的外币储存在<a href="https://www.zhihu.com/search?q=%E5%95%86%E4%B8%9A%E9%93%B6%E8%A1%8C&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:%2245011596%22%7D">商业银行</a>里，央行因为要<a href="https://www.zhihu.com/search?q=%E5%A4%96%E6%B1%87%E5%82%A8%E5%A4%87&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:%2245011596%22%7D">外汇储备</a>，所以便需要用人民币从企业进行购买，于是产生人民币，<a href="https://www.zhihu.com/search?q=%E5%9F%BA%E7%A1%80%E8%B4%A7%E5%B8%81&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22:%22answer%22,%22sourceId%22:%2245011596%22%7D">基础货币</a>增加。</p><h4 id="7-基础货币"><a href="#7-基础货币" class="headerlink" title="7. 基础货币"></a>7. 基础货币</h4><p>基础货币是央行真实印出来的钱，在如下图，央行公布的资产负债表里，有一栏叫储备货币，差不多 29 万亿左右其实就是基础货币，其中 23.5 万亿货币发行，7 万亿本币。 货币发行”（流通中的现金M0与银行库存现金）， 其他存款性公司存款”（即准备金存款，包括法定存款准备金与超额存款准备金）基础货币的创造过程也是来源于央行资产端的扩张。</p><img src="/2023/03/02/%E7%BB%8F%E6%B5%8E%E6%8C%87%E6%A0%87/image-20240302154851944.png" class=""><p><strong>那么这 29万亿是怎么变出 149 万亿 M2？ 信贷</strong></p><p>持续更新中…..</p>]]></content>
    
    
    <categories>
      
      <category>经济</category>
      
    </categories>
    
    
    <tags>
      
      <tag>经济</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
